{
  "version": "2.0.0",
  "type": "shell",
  "problemMatcher": [],
  "inputs": [
    {
      "id": "args",
      "description": "Recipe arguments",
      "type": "promptString",
      "default": ""
    },
    {
      "id": "dependency",
      "description": "Tree of packages requesting this dependency",
      "type": "promptString",
      "default": ""
    },
    {
      "id": "email",
      "description": "Email address associated with your GitHub account",
      "type": "promptString",
      "default": ""
    },
    {
      "id": "change_type",
      "type": "pickString",
      "description": "Change type",
      "options": ["breaking", "deprecation", "change"]
    },
    {
      "id": "cmd",
      "description": "",
      "type": "promptString",
      "default": ""
    },
    {
      "id": "module",
      "description": "",
      "type": "promptString",
      "default": ""
    },
    {
      "id": "script",
      "description": "",
      "type": "promptString",
      "default": ""
    },
    {
      "id": "username",
      "description": "GitHub username",
      "type": "promptString",
      "default": ""
    },
    {
      "id": "version",
      "description": "Version number",
      "type": "promptString",
      "default": ""
    }
  ],
  "tasks": [
    //! VSCode startup
    {
      "label": "con ⚡👥 Contributor environment setup on folder open",
      "command": "$Env:VSCODE_FOLDER_OPEN_TASK='1'; ./j.ps1 con",
      "runOptions": { "runOn": "folderOpen" }
    },
    //* 🌐 Install
    {
      "label": "inst-all 🌐 Install VSCode, GitHub CLI, Git, Windows Terminal, and cross-platform PowerShell",
      "command": "./j.ps1 inst-all"
    },
    {
      "label": "inst-brew 🌐 Install Homebrew",
      "command": "./j.ps1 inst-brew"
    },
    {
      "label": "inst-code 🌐 Install VSCode",
      "command": "./j.ps1 inst-code"
    },
    {
      "label": "inst-gh 🌐 Install GitHub CLI",
      "command": "./j.ps1 inst-gh"
    },
    {
      "label": "inst-git 🌐 Install Git",
      "command": "./j.ps1 inst-git"
    },
    {
      "label": "inst-pwsh 🌐 Install cross-platform PowerShell, the shell used for all non-install recipes",
      "command": "./j.ps1 inst-pwsh"
    },
    {
      "label": "inst-snap 🌐 Install Snap",
      "command": "./j.ps1 inst-snap"
    },
    {
      "label": "inst-uv 🌐 Install a project version of uv if you've got global uv",
      "command": "./j.ps1 inst-uv"
    },
    {
      "label": "inst-wt 🌐 Install Windows Terminal",
      "command": "./j.ps1 inst-wt"
    },

    //* ♾️  Self
    {
      "label": "list 📃 List recipes",
      "command": "./j.ps1 list"
    },
    {
      "label": "just ♾️ Run Just recipes...",
      "command": "./j.ps1 just ${input:args}"
    },

    //* ⛰️ Environments
    {
      "label": "run 🏃 Run shell commands with uv synced...",
      "command": "./j.ps1 run ${input:args}"
    },
    {
      "label": "con 👥 Run recipes as a contributor...",
      "command": "./j.ps1 con ${input:args}"
    },
    {
      "label": "ci 🤖 Run recipes in CI...",
      "command": "./j.ps1 ci ${input:args}"
    },
    {
      "label": "devcontainer 📦 Run recipes in a devcontainer",
      "command": "./j.ps1 devcontainer ${input:args}"
    },

    //* 🟣 uv
    {
      "label": "uv 🟣 uv ...",
      "command": "./j.ps1 uv ${input:args}"
    },
    {
      "label": "uv-run 🏃 uv run ...",
      "command": "./j.ps1 uv-run ${input:args}"
    },
    {
      "label": "uvx 🏃 uvx ...",
      "command": "./j.ps1 uvx ${input:args}"
    },
    {
      "label": "uv-sync 🔃 uv sync ...",
      "command": "./j.ps1 uv-sync ${input:args}"
    },

    //* 🐍 Python
    {
      "label": "py 🐍 uv run python ...",
      "command": "./j.ps1 py ${input:args}"
    },
    {
      "label": "py-module 📦 uv run --module ...",
      "command": "./j.ps1 py-module ${input:module} ${input:args}"
    },
    {
      "label": "py-command 🏃 uv run python -c '...'",
      "command": "./j.ps1 py-command ${input:cmd}"
    },
    {
      "label": "py-script 📄 uv run --script ...",
      "command": "./j.ps1 py-script ${input:script} ${input:args}"
    },
    {
      "label": "py-gui 📺 uv run --gui-script ...",
      "command": "./j.ps1 py-gui ${input:script} ${input:args}"
    },

    //* ⚙️  Tools
    {
      "label": "tool-pytest 🧪 pytest ...",
      "command": "./j.ps1 tool-pytest ${input:args}"
    },
    {
      "label": "tool-docs-preview 📖 preview docs",
      "command": "./j.ps1 tool-docs-preview"
    },
    {
      "label": "tool-docs-build 📖 build docs",
      "command": "./j.ps1 tool-docs-build"
    },
    {
      "label": "tool-pre-commit 🔵 pre-commit run ...",
      "command": "./j.ps1 tool-pre-commit ${input:args}"
    },
    {
      "label": "tool-pre-commit ⚡🔵 pre-commit run",
      "command": "./j.ps1 tool-pre-commit-all"
    },
    {
      "label": "tool-pre-commit-all 🔵 pre-commit run --all-files ...",
      "command": "./j.ps1 tool-pre-commit-all ${input:args}"
    },
    {
      "label": "tool-pre-commit-all ⚡🔵 pre-commit run --all-files",
      "command": "./j.ps1 tool-pre-commit-all"
    },
    {
      "label": "tool-check-clean ✔️ Check that the working tree is clean",
      "command": "./j.ps1 tool-check-clean"
    },
    {
      "label": "tool-fawltydeps ✔️ fawltydeps ...",
      "command": "./j.ps1 tool-fawltydeps ${input:args}"
    },
    {
      "label": "tool-pyright ✔️ pyright",
      "command": "./j.ps1 tool-pyright"
    },
    {
      "label": "tool-ruff ✔️ ruff check ... '.'",
      "command": "./j.ps1 tool-ruff ${input:args}"
    },

    //* 📦 Packaging
    {
      "label": "pkg-build 🛞 Build wheel, compile binary, and sign...",
      "command": "./j.ps1 pkg-build ${input:args}"
    },
    {
      "label": "pkg-build-changelog 📜 Build changelog for new version",
      "command": "./j.ps1 pkg-build-changelog ${input:version}"
    },
    {
      "label": "pkg-release ✨ Release the current version",
      "command": "./j.ps1 pkg-release"
    },

    //* 👥 Contributor environment setup
    {
      "label": "con-git-submodules 👥 Update Git submodules",
      "command": "./j.ps1 con-git-submodules"
    },
    {
      "label": "con-pre-commit-hooks 👥 Install pre-commit hooks",
      "command": "./j.ps1 con-pre-commit-hooks"
    },
    {
      "label": "con-norm-line-endings 👥 Normalize line endings",
      "command": "./j.ps1 con-norm-line-endings"
    },
    {
      "label": "con-dev 👥 Run dev task...",
      "command": "./j.ps1 con-dev ${input:args}"
    },
    {
      "label": "con-update-changelog 👥 Update changelog...",
      "command": "./j.ps1 con-update-changelog ${input:change_type}"
    },
    {
      "label": "con-update-changelog-latest-commit 👥 Update changelog with the latest commit's message",
      "command": "./j.ps1 con-update-changelog-latest-commit"
    },

    //* 📤 CI Output
    {
      "label": "ci-out-latest-release 🏷️ Set CI output to latest release",
      "command": "./j.ps1 ci-out-latest-release"
    },

    //* 🧩 Templating
    {
      "label": "templ-update ⬆️ Update from template",
      "command": "./j.ps1 templ-update"
    },
    {
      "label": "templ-update-prompt ⬆️ Update from template (prompt)",
      "command": "./j.ps1 templ-update-prompt"
    },
    {
      "label": "templ-sync 🔃 Sync with current template",
      "command": "./j.ps1 templ-sync"
    },
    {
      "label": "templ-sync-prompt 🔃 Sync with current template (prompt)",
      "command": "./j.ps1 templ-sync-prompt"
    },
    {
      "label": "templ-recopy ➡️ Recopy current template",
      "command": "./j.ps1 templ-recopy"
    },
    {
      "label": "templ-recopy-prompt ➡️ Recopy current template (prompt)",
      "command": "./j.ps1 templ-recopy-prompt"
    },

    //* 🛠️ Repository setup
    {
      "label": "repo-init 🥾 Initialize repository",
      "command": "./j.ps1 repo-init"
    },

    //* 💻 Machine setup
    {
      "label": "setup-git 👤 Set Git username and email",
      "command": "./j.ps1 setup-git ${input:username} ${input:email}"
    },
    {
      "label": "setup-git-recs 👤 Configure Git as recommended",
      "command": "./j.ps1 setup-git-recs"
    },
    {
      "label": "setup-gh 🔑 Log in to GitHub API",
      "command": "./j.ps1 setup-gh"
    },
    {
      "label": "setup-scripts 🔓 Allow running local PowerShell scripts",
      "command": "./j.ps1 setup-scripts"
    },

    //TODO
    {
      "label": "todo ⚠️ Remove *.rej",
      "command": "Get-ChildItem -Recurse -Filter *.rej | Remove-Item"
    },
    {
      "label": "todo ⚠️ Rebase back to fork",
      "command": "git rebase -i --fork-point main"
    },
    {
      "label": "todo ⚠️ Show tree of packages requesting a dependency",
      "command": "./j.ps1 uv-run pipdeptree --reverse --packages ${input:dependency}"
    },
    {
      "label": "todo ⚠️ Profile this file",
      "command": "./j.ps1 uv-run cProfile -o .prof ${file}"
    },
    {
      "label": "todo ⚠️ View profile results with snakeviz",
      "command": "./j.ps1 uv-run snakeviz .prof"
    }
  ]
}
